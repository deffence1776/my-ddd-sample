plugins {
    id "java"
    id "idea"
    id "eclipse"
    id 'org.springframework.boot' version '2.1.7.RELEASE'
}


sourceCompatibility = JavaVersion.VERSION_11
targetCompatibility = JavaVersion.VERSION_11

bootRun {
    if (project.hasProperty('args')) {
        args project.args.split(',')
    }
}

sourceSets {
    main {
        // mybatis SQL map XML ファイルを java 以下でも検知する
        resources.srcDirs = ["src/main/java", "src/main/resources"]
    }

    test {
        java.srcDirs = ["src/test/java","src/senario/java"]
        resources.srcDirs = ["src/test/resources","src/senario/resources"]
    }
}

repositories {
    jcenter()
}

dependencies {
    implementation platform("org.springframework.boot:spring-boot-dependencies:2.1.5.RELEASE")
    implementation("org.springframework.boot:spring-boot-starter-web")
    implementation("org.springframework.boot:spring-boot-starter-thymeleaf")
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation("org.springframework.boot:spring-boot-starter-security")
    implementation("org.thymeleaf.extras:thymeleaf-extras-springsecurity5")
    implementation("org.mybatis.spring.boot:mybatis-spring-boot-starter:2.0.1")

//    runtimeOnly("com.h2database:h2")
    runtimeOnly group: 'org.postgresql', name: 'postgresql', version: '42.2.6'


    testImplementation("org.springframework.boot:spring-boot-starter-test") {
        exclude(group: 'junit')
    }

    testImplementation platform("org.junit:junit-bom:5.3.2")
    testImplementation("org.junit.jupiter:junit-jupiter-api")
    testImplementation("org.junit.jupiter:junit-jupiter-params")
    testRuntimeClasspath("org.junit.platform:junit-platform-launcher")
    testRuntimeClasspath("org.junit.jupiter:junit-jupiter-engine")
    testImplementation("org.assertj:assertj-core:3.11.1")

}

test {
    useJUnitPlatform()
}

javadoc {
    options.charSet = 'UTF-8'
    options.encoding = 'UTF-8'
}
